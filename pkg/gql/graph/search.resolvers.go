package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"backend/pkg/db"
	"context"
	"strings"
)

// GlobalSearch is the resolver for the globalSearch field.
func (r *queryResolver) GlobalSearch(ctx context.Context, query string) ([]*db.Post, error) {
	// split the query into words
	// search for each word in the database, use `LIKE`
	// return the results
	words := strings.Split(query, " ")
	var posts []*db.Post
	pquery := r.DB.NewSelect().Model(&posts).Join("JOIN user ON post.post_userid = user.user_id")
	for _, word := range words {
		pquery = pquery.Where("title LIKE ? OR content LIKE ? OR user.nickname LIKE ? OR tag LIKE ?",
			"%"+word+"%", "%"+word+"%", "%"+word+"%", "%"+word+"%")
	}
	pquery.Scan(ctx)
	return posts, nil
}
