directive @goModel(
	model: String
	models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
	forceResolver: Boolean
	name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goTag(
	key: String!
	value: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION


# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User @goModel(
  model: "backend/pkg/db.User"
){
  id: ID!
  loginName: String!
  nickname: String
  password: String
  email: String
  about: String

  post: [Post]
  comment: [Comment]
}

type Post @goModel(
  model: "backend/pkg/db.Post"
){
  id: ID!
  title: String
  content: String

  user: User
  comment: [Comment]
}

type Comment @goModel(
  model: "backend/pkg/db.Comment"
){
  id: ID!
  content: String

  user: User
  post: Post
}

type Query {
  users: [User!]!
}

input NewUser {
  loginName: String!
}

type Mutation {
  createUser(input: NewUser!): User!
}
